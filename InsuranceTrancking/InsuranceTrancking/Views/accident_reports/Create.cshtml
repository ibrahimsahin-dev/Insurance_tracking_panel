
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Create Accident Report</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
    <div class="container my-5">
        <h2>Create Accident Report</h2>
        <form action="/accident_reports/Create" method="post" class="needs-validation" novalidate>
            <div class="mb-3">
                <label for="ReportID" class="form-label">Report ID</label>
                <input type="text" id="ReportID" name="ReportID" class="form-control" required />
                <div class="invalid-feedback">Please provide a valid Report ID.</div>
            </div>
            <div class="mb-3">
                <label for="Location" class="form-label">Location</label>
                <input type="text" id="Location" name="Location" class="form-control" required />
                <div class="invalid-feedback">Please provide a valid Location.</div>
            </div>
                        <div class="mb-3">
                <label for="VehicleID" class="form-label">Vehicle ID</label>
                <select id="VehicleID" name="VehicleID" class="form-select" required onchange="filterPolicyID()">
                    @foreach (var vehicle in (ViewBag.Vehicles as List<InsuranceTrancking.Models.vehicles> ?? new List<InsuranceTrancking.Models.vehicles>()))
                    {
                        <option value="@vehicle.VehicleID" data-customer="@vehicle.CustomerID">
                            @vehicle.Plate
                        </option>
                    }
                </select>
                <div class="invalid-feedback">Please select a valid Vehicle ID.</div>
            </div>

            <div class="mb-3">
                <label for="PolicyID" class="form-label">Policy ID</label>
                <select id="PolicyID" name="PolicyID" class="form-select" required>

                    @foreach (var policy in (ViewBag.InsurancePolicies as List<InsuranceTrancking.Models.insurance_policies> ?? new List<InsuranceTrancking.Models.insurance_policies>()))
                    {
                        <option value="@policy.PolicyID" data-customer="@policy.CustomerID">
                            @policy.PolicyID
                        </option>
                    }
                </select>
                <div class="invalid-feedback">Please select a valid Policy ID.</div>
            </div>

            <div class="mb-3">
                <label for="RepairShopID" class="form-label">Repair Shop ID</label>
                <select id="RepairShopID" name="RepairShopID" class="form-select" required>
                    @foreach (var repairshop in (ViewBag.RepairShop as List<InsuranceTrancking.Models.repair_shops> ?? new List<InsuranceTrancking.Models.repair_shops>()))
                    {
                        <option value="@repairshop.ShopID" data-customer="@repairshop.ShopID">
                            @repairshop.ShopName
                        </option>
                    }
                </select>
                <div class="invalid-feedback">Please select a valid Vehicle ID.</div>
            </div>

            <button type="submit" class="btn btn-primary">Create</button>
            <a href="/accident_reports/Index" class="btn btn-secondary">Back to List</a>
        </form>
    </div>

    <script>
        // Example Bootstrap form validation
        (() => {
            'use strict';
            const forms = document.querySelectorAll('.needs-validation');
            Array.from(forms).forEach(form => {
                form.addEventListener('submit', event => {
                    if (!form.checkValidity()) {
                        event.preventDefault();
                        event.stopPropagation();
                    }
                    form.classList.add('was-validated');
                }, false);
            });
        })();

        // Filter PolicyID options based on selected VehicleID
        function filterPolicyID() {
            var vehicleDropdown = document.getElementById("VehicleID");
            var policyDropdown = document.getElementById("PolicyID");

            // Get the selected Vehicle's associated Customer ID
            var selectedVehicle = vehicleDropdown.options[vehicleDropdown.selectedIndex];
            var relatedCustomerID = selectedVehicle.getAttribute("data-customer");

            // Loop through PolicyID options to filter based on CustomerID
            for (var i = 0; i < policyDropdown.options.length; i++) {
                var policyOption = policyDropdown.options[i];
                var policyCustomerID = policyOption.getAttribute("data-customer");

                // Show only the related policy (based on the customer ID)
                if (policyCustomerID === relatedCustomerID || policyOption.value === "") {
                    policyOption.style.display = "block"; // Show the option
                } else {
                    policyOption.style.display = "none"; // Hide the option
                }
            }

            // Reset selection if invalid
            if (policyDropdown.value !== relatedCustomerID) {
                policyDropdown.value = "";
            }
        }
    </script>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>